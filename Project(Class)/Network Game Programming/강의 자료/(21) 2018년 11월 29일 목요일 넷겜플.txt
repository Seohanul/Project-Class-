

입출력 완료 포트 IOCP

	비동기 입출력 결과와 결과를 처리할 스레드에 관한 정보를 담고 있는 구조
		APC 큐와 비슷한 개념



	APC 큐 vs. 입출력 완료 포트
   생성과 파괴
	APC 큐는 각 스레드마다 자동으로 생성되고 파괴. 입출력 완료 포트는
	CreateIoCompletionPort() 함수를 호출하여 생성하고 CloseHandle() 함수를 호출하여 파괴
   접근 제약***
	APC 큐에 저장된 결과는 APC 큐를 소유한 스레드만 확인할 수 있지만 입출력 완료 포트에는 이런 제약이 없음 
	이게 퍼포먼스 차이로 나옴 



Overlapped 2모델에서는 고속도로 1차선에 톨게이트 4개
	톨게이트에서 돈내고 다시 1차선이므로 거기서 막힘
	즉 소켓 작업을 한 후의 처리가 많음

IOCP는 톨케이트 이후 4차선으로 바꿈








    비동기 입출력 처리 방법
		APC 큐는 alertable wait 상태
		IOCP는 GetQueued-CompletionStatus() 함수를 호출해야함





Completion Port 모델 동작 원리
	응용 프로그램을 구성하는 임의의 스레드에서 비동기 입출력 함수를 호출함으로써 운영체제에 입출력 작업을 요청
	
	모든 작업자 스레드는 GetQueuedCompletionStatus() 함수를 호출해 입출력 완료 포트를 감시

	비동기 입출력 작업이 완료되면 운영체제는 입출력 완료 포트에 결과를 저장. 입출력 완료 패킷

	운영체제는 입출력 완료 포트에 저장된 작업자 스레드 목록에서 하나를 선택하여 깨움. 대기 상태에서 깨어난 작업자 스레드는 비동기 입출력 결과를 처리.
		






Completion Port 모델을 이용한 소켓 입출력 절차
	1. CreateIoCompletionPort() 함수를 호출해 입출력 완료 포트 생성
	
	2. CPU 개수에 비례하여 작업자 스레드를 생성. 모든 작업자 스레드는
	GetQueuedCompletionStatus() 함수를 호출하여 대기 상태가 됨
	
	3. 비동기 입출력을 지원하는 소켓을 생성. 소켓에 대한 비동기 입출력
	결과가 입출력 완료 포트에 저장되려면 CreateIoCompletionPort() 함수를
	 호출해 소켓과 입출력 완료 포트를 연결해야 함

	4. 비동기 입출력 함수를 호출. 비동기 입출력 작업이 곧바로 완료되지
	않으면 소켓 함수는 SOCKET_ERROR를 리턴하고 오류 코드는
	WSA_IO_PENDING으로 설정됨

	5. 비동기 입출력 작업이 완료되면 운영체제는 입출력 완료 포트에 결과를
	 저장하고 대기 중인 스레드 하나를 깨움. 대기 상태에서 깨어난
	작업자 스레드는 비동기 입출력 결과를 처리

	6. 새로운 소켓을 생성하면 3~5를, 그렇지 않으면 4~5를 반복






* 입출력 완료 포트 생성 
	없는 완료 포트 생성할때
	생성한 완료 포트와 소켓을 연결 시킬때



HANDLE CreateIoCompletionPort (
	HANDLE FileHandle,
	HANDLE ExistingCompletionPort,
	ULONG CompletionKey,
	DWORD NumberOfConcurrentThreads
) ;
성공: 입출력 완료 포트 핸들, 실패: NULL



FileHandle: CompletionPort에 연결하고자 하는 Overlapped 소켓 핸들. INVALID_HANDLE_VALUE 를 지정하면 새로운 IOCP 핸들을 생성.

ExistingCompletionPort: 이미 생성된 CompletionPort 핸들

CompletionKey: 연결되는 소켓에 관한 정보를 쓰레드에 전달하는 용도

NumberOfConcurrentThreads: 동시 실행 가능한 쓰레드 수를 입력, 0을 입력하면 시스템 CPU 수와 일치하게 됨
 	0 넣어주면 알아서 해줌


ex)
입출력 완료 포트 생성
	HANDLE hcp = CreateIoCompletionPort(
				INVALID_HANDLE_VALUE,~

2가지 예시 ppt (새거)






* 비동기 입출력 결과 확인
	BOOL GetQueuedCompletionStatus (
HANDLE CompletionPort,
	LPDWORD lpNumberOfBytes,
	LPDWORD lpCompletionKey,
	LPOVERLAPPED *lpOverlapped,
	DWORD dwMilliseconds
) ;
성공: 0이 아닌 값, 실패: 0
	


CompletionPort: 입출력 완료 포트 핸들

lpNumberOfBytes: 비동기 입출력 작업으로 전송된 바이트 수가 여기에 저장

lpCompletionKey: CreateCompletionPort() 함수 호출시 전달한 세 번째 인자(32비트)가 여기에 저장

lpOverlapped: 비동기 입출력 함수 호출시 전달한 OVERLAPPED 구조체의 주소값이 여기에 저장

dwMilliseconds: 작업자 스레드가 대기할 시간을 설정. 예) INFINITE
