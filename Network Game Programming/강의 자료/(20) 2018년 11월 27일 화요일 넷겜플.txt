*Overlapped 모델 2


	비동기 입출력 함수를 호출함으로써 운영체제에 입출력 작업을 요청

	해당 스레드는 곧바로 alertable wait 상태에 진입
				
	비동기 입출력 작업이 완료되면, 운영체제는 스레드의 APC 큐에 결과를 저장

	비동기 입출력 함수를 호출한 스레드가 alertable wait 상태에 있으면 운영체제는 
	APC 큐에 저장된 정보(완료 루틴의 주소)를 참조하여 완료 루틴 호출
	wait가 끝나기 전에 콜백함수(완료 루틴)을 호출하고 끝냄

	APC 큐에 저장된 정보를 토대로 모든 완료 루틴 호출이 끝나면 스레드는 alertable wait 상태에서 빠져나옴.


	



Overlapped 모델(II)를 이용한 소켓 입출력 절차
	① 비동기 입출력을 지원하는 소켓을 생성

	② 비동기 입출력을 지원하는 소켓 함수를 호출. 이때 완료 루틴의
		시작 주소를 함수 인자로 전달

	③ 비동기 입출력 함수를 호출한 스레드를 alertable wait 상태로 만듦

	④ 비동기 입출력 작업이 완료되면 운영체제는 완료 루틴을 호출.
	완료 루틴에서는 비동기 입출력 결과를 확인하고 후속 처리를 함

	⑤ 완료 루틴 호출이 모두 끝나면 스레드는 alertable wait 상태에서 빠져나옴

	⑥ 새로운 소켓을 생성하면 ①~⑤를, 그렇지 않으면 ②~⑤를 반복





완료 루틴
	I/O가 완료되었을 때, 자동으로 호출될 함수 (WSASend, WSARecv 함수의 마지막 전달 인자)



void CALLBACK CompletionRoutine (
	DWORD dwError,	
	DWORD cbTransferred,
	LPWSAOVERLAPPED lpOverlapped,
	DWORD dwFlags
) ;


dwError: 오류정보 전달. 비동기 입출력 결과. 오류가 발생하면 0이 아닌 값이 됨
cbTransfered: 전송된 바이트 수가 전달. 통신 상대가 접속을 종료하면 값은 0이 됨
lpOverlapped: WSARecv 함수 호출 시 전달한 구조체 변수. 비동기 입출력 함수 호출 시 넘겨준 WSAOVERLAPPED 구조체의 주소값이 이 인자를 통해 다시 응용 프로그램에 넘어옴.
		 Overlapped 모델(II)에서는 이벤트 객체를 사용하지 않으므로 WSAOVERLAPPED조체를 완료 루틴 내부에서 직접 사용할 일은 없음.
dwFlags: 옵션. 대부분 0임.





이 모델은 거의 안씀
IOCP랑 난이도는 비슷한데 IOCP가 더 성능이 좋으므로 















