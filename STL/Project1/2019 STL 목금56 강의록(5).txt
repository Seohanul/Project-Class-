

=========================================
Fri Mar 22 13:48:01 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{
	cout << "Input num : " << endl;
	int num = 0;
	cin >> num;
	
	String* p = new String[num];

	default_random_engine dre;
	uniform_int_distribution<> uid(1, 80);

	for (int i = 0; i < num; ++i)
		p[i].setNum(uid(dre));

	sort(p, p + num, [](const String& a, const String& b) {
		return a.getNum() < b.getNum();
	});


	save("소스.cpp");
}



=========================================
Fri Mar 22 13:49:27 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{
	cout << "Input num : " << endl;
	int num = 0;
	cin >> num;
	
	String* p = new String[num];

	default_random_engine dre;
	uniform_int_distribution<> uid(1, 80);

	for (int i = 0; i < num; ++i)
		p[i].setNum(uid(dre));

	sort(p, p + num, [](const String& a, const String& b) {
		return a.getNum() < b.getNum();
	});


	cout << "정렬 후" << endl;


	save("소스.cpp");
}



=========================================
Fri Mar 22 13:49:41 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{
	cout << "Input num : " << endl;
	int num = 0;
	cin >> num;
	
	String* p = new String[num];

	default_random_engine dre;
	uniform_int_distribution<> uid(1, 80);

	for (int i = 0; i < num; ++i)
		p[i].setNum(uid(dre));

	sort(p, p + num, [](const String& a, const String& b) {
		return a.getNum() < b.getNum();
	});


	cout << "정렬 후" << endl;


	save("소스.cpp");
}



=========================================
Fri Mar 22 13:50:34 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{
	cout << "Input num : " << endl;
	int num = 0;
	cin >> num;
	
	String* p = new String[num];

	default_random_engine dre;
	uniform_int_distribution<> uid(1, 80);

	for (int i = 0; i < num; ++i)
		p[i].setNum(uid(dre));

	sort(p, p + num, [](const String& a, const String& b) {
		return a.getNum() < b.getNum();
	});


	cout << "After Sorting ..." << endl;


	save("소스.cpp");
}



=========================================
Fri Mar 22 13:51:10 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{
	cout << "Input num : " << endl;
	int num = 0;
	cin >> num;
	
	String* p = new String[num];

	default_random_engine dre;
	uniform_int_distribution<> uid(1, 80);

	for (int i = 0; i < num; ++i)
		p[i].setNum(uid(dre));

	sort(p, p + num, [](const String& a, const String& b) {
		return a.getNum() < b.getNum();
	});


	cout << "After Sorting ..." << endl;


	save("소스.cpp");
}



=========================================
Fri Mar 22 13:52:14 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{
	cout << "Input num : " << endl;
	int num = 0;
	cin >> num;
	
	String* p = new String[num];

	default_random_engine dre;
	uniform_int_distribution<> uid(1, 80);

	for (int i = 0; i < num; ++i)
		p[i].setNum(uid(dre));

	sort(p, p + num, [](const String& a, const String& b) {
		return a.getNum() < b.getNum();
	});


	cout << "After Sorting ..." << endl;


	save("소스.cpp");
}



=========================================
Fri Mar 22 13:54:36 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{
	while (true)
	{


		cout << "Input num : " << endl;
		int num = 0;
		cin >> num;

		String* p = new String[num];

		default_random_engine dre;
		uniform_int_distribution<> uid(1, 80);

		for (int i = 0; i < num; ++i)
			p[i].setNum(uid(dre));

		sort(p, p + num, [](const String& a, const String& b) {
			return a.getNum() < b.getNum();
		});


		cout << "After Sorting ..." << endl;

		for (int i = 0; i < num; ++i)
			cout << p[i] << endl;

		delete[] p;

		save("소스.cpp");
	}
}



=========================================
Fri Mar 22 14:04:08 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{

	String a{ 20 };
	String b{ 30 };

	cout << &a << endl;
	cout << &b << endl;

	save("소스.cpp");

}



=========================================
Fri Mar 22 14:05:38 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{

	String* a=new String { 20 };
	String* b =new String { 30 };

	cout << &a << endl;
	cout << &b << endl;

	save("소스.cpp");

}



=========================================
Fri Mar 22 14:06:20 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{

	String* a = new String{ 20 };
	String* b = new String{ 30 };

	cout << &a << endl;
	cout << &b << endl;

	delete a;
	delete b;

	save("소스.cpp");

}



=========================================
Fri Mar 22 14:06:46 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 21일 (목)  3주 1
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>

#include "save.h"
#include "String.h"
using namespace std;


// 정수 입력을 받아 그 수만큼 String을 생성하라
// 길이 오름차순으로 정렬 후 출력하라.

int main()
{

	String* a = new String{ 20 };
	String* b = new String{ 30 };

	cout << a << endl;
	cout << b << endl;

	delete a;
	delete b;

	save("소스.cpp");

}



=========================================
Fri Mar 22 14:15:03 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include "save.h"
#include "String.h"
using namespace std;


// 1. unique_ptr - 자원을 독점함
// 2. shared_ptr - 자원을 공유함 (비싼 자원)



int main()
{

	unique_ptr<String> a ( new String{ 20 });

	unique_ptr<String> b(new String{ 20 });


	save("소스.cpp");

}



=========================================
Fri Mar 22 14:21:07 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include "save.h"
#include "String.h"
using namespace std;


// 1. unique_ptr - 자원을 독점함
// 2. shared_ptr - 자원을 공유함 (비싼 자원)



int main()
{

	unique_ptr<String> a{ new String{ 20 } };
	
	unique_ptr<String> b{ new String{ 20 } };

	auto c = make_unique<String>(20);
	
	unique_ptr<String> d = make_unique<String>(30);


	// a = b;
	// 독점이기 때문에 이런 동작 안됨

	save("소스.cpp");

}



=========================================
Fri Mar 22 14:39:17 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include "save.h"
#include "String.h"
using namespace std;


// 1. unique_ptr - 자원을 독점함
// 2. shared_ptr - 자원을 공유함 (비싼 자원)



int main()
{
	cout << "몇 개나 만들까요? ";
	int num;
	cin >> num;

	unique_ptr<String[]> str{ new String[num] };


	default_random_engine dre;
	uniform_int_distribution<> uid(1, 80);
	for (int i = 0; i < num; ++i)
		str[i].setNum(uid(dre));

	sort(&str[0], &str[num], [](const String& a, const String& b ) {
		return a.getNum() > b.getNum();
	});


	for (int i = 0; i < num; ++i)
		cout << str[i] << endl;


	save("소스.cpp");

}



=========================================
Fri Mar 22 15:00:07 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include <string>
#include "save.h"
#include "String.h"
using namespace std;


// 연습문제 1번 (62p)
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하라.


int main()
{
	string s[5]{"kill", "die", "monkey" ,"changja", "hu"}; //RAII

	auto p = begin(s);

	cout << *p << endl;
	
	save("소스.cpp");

}



=========================================
Fri Mar 22 15:01:10 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include <string>
#include "save.h"
#include "String.h"
using namespace std;


// 연습문제 1번 (62p)
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하라.


int main()
{
	string s[5]{"kill", "die", "monkey" ,"changja", "hu"}; //RAII

	auto p = begin(s);

	cout << *p << endl;
	++p;
	
	cout << *p << endl;


	save("소스.cpp");

}



=========================================
Fri Mar 22 15:02:07 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include <string>
#include "save.h"
#include "String.h"
using namespace std;


// 연습문제 1번 (62p)
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하라.


int main()
{
	string s[5]{"kill", "die", "monkey" ,"changja", "hu"}; //RAII

	auto p = begin(s);

	while (p != end(s))
		cout << *p++ << endl;


	save("소스.cpp");

}



=========================================
Fri Mar 22 15:03:14 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include <string>
#include <list>
#include "save.h"
#include "String.h"
using namespace std;


// 연습문제 1번 (62p)
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하라.


int main()
{
	list<string> s{"kill", "die", "monkey" ,"changja", "hu"}; //RAII

	auto p = begin(s);

	while (p != end(s))
		cout << *p++ << endl;


	save("소스.cpp");

}



=========================================
Fri Mar 22 15:16:41 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include <string>
#include <iterator>
#include "save.h"
#include "String.h"
using namespace std;


// 연습문제 1번 (62p)
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하라.

// 연습문제 2번
// 각 원소에 transform을 적용해 모든 모음을 *로 바꿔 화면 출력하라


int main()
{
	string s[5]{"kill", "die", "monkey" ,"changja", "hu"}; //RAII

	transform(begin(s), end(s), ostream_iterator<string>(cout, "\n"), [](string& str) {
		for (char& c : str) {
			if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
				c = '*';
		}
		return str;
	});	
	// 출력 반복자 

	auto p = begin(s);

	while (p != end(s))
		cout << *p++ << endl;


	save("소스.cpp");

}



=========================================
Fri Mar 22 15:17:44 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include <string>
#include <iterator>
#include "save.h"
#include "String.h"
using namespace std;


// 연습문제 1번 (62p)
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하라.

// 연습문제 2번
// 각 원소에 transform을 적용해 모든 모음을 *로 바꿔 화면 출력하라


int main()
{
	string s[5]{"kill", "die", "monkey" ,"changja", "hu"}; //RAII

	transform(begin(s), end(s), ostream_iterator<string>(cout, "\n"), [](string& str) {
		for (char& c : str) {
			if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
				c = '*';
		}
		return str;
	});	


	save("소스.cpp");

}



=========================================
Fri Mar 22 15:19:28 2019
=========================================

//------------------------------------------------------------------------------------------------
// 2019년 3월 22일 (금)  3주 2
//
//	1장 읽어보기
//
//	자원을 확보하는 클래스 만들어보기
//
//
// 과제 - class String을 파일 분리하자.  #include "String.h"
//			1장 읽어보기 
//------------------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <algorithm>
#include <memory>
#include <string>
#include <iterator>
#include "save.h"
#include "String.h"
using namespace std;


// 연습문제 1번 (62p)
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하라.

// 연습문제 2번
// 각 원소에 transform을 적용해 모든 모음을 *로 바꿔 화면 출력하라


int main()
{
	string s[5]{"kill", "die", "monkey" ,"changja", "hu"}; //RAII

	transform(begin(s), end(s), ostream_iterator<string>(cout, "\n"), [](string& str) {
		for (char& c : str) {
			if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
				c = '*';
		}
		return str;
	});	


	save("소스.cpp");

}

